{"version":3,"sources":["api/addTodoItem.js","providers/todoProvider.js","hooks/useTodoContext.js","hooks/useCancellablePromise.js","components/AddToDo.js","hooks/useAddToDo.js","api/updateToDoItem.js","components/ToDoItem.js","hooks/useCompleteToDo.js","components/ToDoItems.js","components/ToDoHome.js","hooks/useToDoList.js","api/fetchToDoItems.js","App.js","serviceWorker.js","index.js"],"names":["addToDoItem","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","text","wrap","_context","prev","next","abrupt","Promise","resolve","setTimeout","id","uuid","isComplete","stop","_x","apply","this","arguments","ToDoContext","React","createContext","TodoProvider","Provider","useToDoContext","todoContext","useContext","state","dispatch","makeCancelable","promise","isCanceled","reject","then","val","Error","catch","error","cancel","useCancellablePromise","cancelable","length","undefined","emptyPromise","promises","useRef","useEffect","current","forEach","p","cancellablePromise","cPromise","push","TodoInputContainer","styled","div","_templateObject","ToDoInput","Input","_templateObject2","AddButton","Button","_templateObject3","AddIcon","Icon","_templateObject4","AddToDo","_useAddToDo","_useState","useState","_useState2","slicedToArray","setText","_useState3","_useState4","newItemText","setNewItemText","item","sent","type","addTodoApiCall","onTextChange","e","currentTarget","value","onAddToDo","handleKeyDown","key","useAddToDo","react_default","createElement","onKeyDown","onChange","placeholder","onClick","theme","updateToDoItem","ToDoItem_templateObject","TodoCheckBox","Checkbox","ToDoItem_templateObject2","TodoItem","onItemStateChange","isChecked","setIsChecked","objectSpread","updateItem","target","checked","useCompleteToDo","ToDoItem_TodoInputContainer","ToDoItems","todoItems","Fragment","map","t","ToDoItem","TabPane","Tabs","Container","ToDoHome_templateObject","TodoContainer","ToDoHome_templateObject2","TabTitle","span","ToDoHome_templateObject3","BadgeCircle","ToDoHome_templateObject4","AllItemsBadge","_templateObject5","CompletedItemBadge","_templateObject6","ToDoHome","_useToDoList","_useToDoContext","items","fetchItems","openToDoItems","filter","completeToDoItems","useToDoList","components_AddToDo","tabs","defaultActiveKey","size","tab","badge","count","overflowCount","components_ToDoItems","initialState","markItemStateChange","find","toConsumableArray","reducer","action","concat","App","useReducer","className","components_ToDoHome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57374822.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\n\nexport const addToDoItem = async (text) => {\n    //Asynchronous api call\n    return new Promise((resolve) => {\n        setTimeout(resolve({\n            text,\n            id: uuid(),\n            isComplete: false\n        }), 200);\n    });\n}\n\n","import React from 'react';\n\nexport const ToDoContext = React.createContext({});\nexport const TodoProvider = ToDoContext.Provider;","import { useContext } from \"react\";\nimport { ToDoContext } from \"../providers/todoProvider\";\n\nexport const useToDoContext = () => {\n  const todoContext = useContext(ToDoContext);\n  return {\n      state: todoContext[0],\n      dispatch: todoContext[1]\n  }\n};","import { useRef, useEffect } from 'react';\n\nexport const makeCancelable = (promise) => {\n  let isCanceled = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise\n      .then(val => (isCanceled ? reject(new Error({ isCanceled })) : resolve(val)))\n      .catch(error => (isCanceled ? reject(new Error({ isCanceled })) : reject(error)));\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      isCanceled = true;\n    },\n  };\n}\n\nexport const useCancellablePromise = (cancelable = makeCancelable) => {\n  const emptyPromise = Promise.resolve(true);\n\n  // test if the input argument is a cancelable promise generator\n  if (cancelable(emptyPromise).cancel === undefined) {\n    throw new Error('promise wrapper argument must provide a cancel() function')\n  }\n\n  const promises = useRef();\n\n  useEffect(\n    () => {\n      promises.current = promises.current || [];\n      return () => {\n        promises.current.forEach(p => p.cancel());\n        promises.current = [];\n      };\n    }, []\n  );\n\n  const cancellablePromise = (p) =>  {\n    const cPromise = cancelable(p);\n    promises.current.push(cPromise);\n    return cPromise.promise;\n  };\n\n  return { cancellablePromise };\n}","import React from 'react';\nimport { Input, Icon, Button } from 'antd';\nimport styled from 'styled-components';\nimport { useAddToDo } from '../hooks/useAddToDo';\n\nconst TodoInputContainer = styled.div`\n    display: flex;\n`;\n\nconst ToDoInput = styled(Input)`\n  height: 50px;\n`;\n\nconst AddButton = styled(Button)`\n  border: none;\n  background: none;\n  &:hover{\n    background: none;\n    border: none;\n  }\n  &:active{\n    background: none;\n    border: none;\n  }\n`;\n\nconst AddIcon = styled(Icon)`\n  font-size: 50px;\n`;\n\nconst AddToDo = () => {\n  \n  const {onAddToDo, text, onTextChange, handleKeyDown } = useAddToDo();\n  \n  return (\n        <TodoInputContainer>\n            <ToDoInput value={text} \n            onKeyDown={handleKeyDown}\n            onChange={onTextChange} placeholder=\"Type your todo item\"/>\n            <AddButton onClick={onAddToDo}><AddIcon type=\"plus-square\" theme=\"twoTone\" /></AddButton>\n        </TodoInputContainer>\n  );\n};\n\nexport default AddToDo;","import { useEffect, useState } from \"react\";\nimport { addToDoItem } from '../api/addTodoItem';\nimport { useToDoContext } from \"./useTodoContext\";\nimport {useCancellablePromise} from '../hooks/useCancellablePromise';\n\nexport const useAddToDo = () => {\n  const [text, setText] = useState('');\n  const { dispatch } = useToDoContext();\n  const [newItemText, setNewItemText] = useState();\n  const { cancellablePromise } = useCancellablePromise();\n\n  useEffect(() => {\n    const addTodoApiCall = async () => {\n      if (newItemText) {\n        const item = await cancellablePromise(addToDoItem(newItemText));\n        dispatch({\n          type: 'ADD_ITEM',\n          item\n        });\n        setText('');\n        setNewItemText();\n      }\n    }\n    addTodoApiCall();\n    return () => {\n    };\n  }, [newItemText]);\n\n\n  return {\n    text,\n    onTextChange: (e) => {\n      setText(e.currentTarget.value);\n    },\n    onAddToDo: () => {\n      setNewItemText(text);\n    },\n    handleKeyDown: (e) => {\n      if (e.key === 'Enter') {\n        setNewItemText(text);\n      }\n    }\n  };\n\n};","\nexport const updateToDoItem = (item) => {\n    //Asynchronous api call\n    return new Promise((resolve) => {\n        setTimeout(resolve(item), 200);\n    });\n}\n\n","import React from 'react';\nimport { Checkbox } from 'antd';\nimport styled from 'styled-components';\nimport { useCompleteToDo } from '../hooks/useCompleteToDo';\n\nconst TodoInputContainer = styled.div`\n    display: flex;\n`;\n\nconst TodoCheckBox = styled(Checkbox)`\n    display: flex;\n    align-items: center;\n    font-size: 1.4rem;\n    padding: 1rem 1rem 0.25rem 1rem;\n    border-bottom: 1px solid #d3d3d3;;\n    &:hover{\n      background: #1890ff;\n      color: #fff;\n    }\n    width: 100%;\n`;\n\n\nconst TodoItem = ({item}) => {\n  \n  const { onItemStateChange } = useCompleteToDo(item);\n\n  return (\n        <TodoInputContainer>\n            <TodoCheckBox checked={item.isComplete} onChange={onItemStateChange}>{item.text}</TodoCheckBox>\n        </TodoInputContainer>\n  );\n};\n\nexport default TodoItem;","import { useEffect, useState } from \"react\";\nimport { updateToDoItem } from '../api/updateToDoItem';\nimport { useToDoContext } from \"./useTodoContext\";\nimport {useCancellablePromise} from '../hooks/useCancellablePromise';\n\nexport const useCompleteToDo = (item) => {\n    const [isChecked, setIsChecked] = useState(item.isComplete);\n    const { dispatch } = useToDoContext();\n    const { cancellablePromise } = useCancellablePromise();\n\n    useEffect(() => {\n        if(item.isChecked !== isChecked){\n            const updateItem = async () => {\n                await cancellablePromise(updateToDoItem({\n                    ...item,\n                    isComplete: isChecked\n                }));\n                if(isChecked){\n                    dispatch({\n                        type: 'COMPLETE_ITEM',\n                        id: item.id\n                    });\n                }else{\n                    dispatch({\n                        type: 'UNDO_COMPLETE_ITEM',\n                        id: item.id\n                    });\n                }\n                \n            };\n    \n            updateItem();\n        }\n        \n        \n    }, [isChecked]);\n\n    return {\n        onItemStateChange: (e) => {\n            setIsChecked(e.target.checked);\n        }\n    };\n}","import React from 'react';\nimport ToDoItem from './ToDoItem';\n\nconst ToDoItems = ({todoItems}) => {\n    return (\n        <>\n            {\n                todoItems.map((t) =>\n                    <ToDoItem key={t.id} item={t} />)\n            }\n        </>\n    );\n}\n\nexport default ToDoItems;\n","import React from 'react';\nimport { Tabs, Badge } from 'antd';\nimport styled from 'styled-components';\nimport AddToDo from './AddToDo';\nimport ToDoItems from './ToDoItems';\nimport { useToDoList } from '../hooks/useToDoList';\nconst { TabPane } = Tabs;\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 50%;\n`;\n\nconst TodoContainer = styled.div`\n`;\n\nconst TabTitle = styled.span`\n    padding-right: 0.75rem;\n`;\n\n\nconst BadgeCircle = styled.span`\n    box-sizing: border-box;\n    border-radius: 10px;\n    min-width: 20px;\n    height: 20px;\n    line-height: 20px;\n    white-space: nowrap;\n    text-align: center;\n`;\n\nconst AllItemsBadge = styled(BadgeCircle)`\n    background-color: #fff;\n    color: #999;\n    box-shadow: 0 0 0 1px #d9d9d9 inset ;\n`\n\nconst CompletedItemBadge = styled(BadgeCircle)`\n    background-color: #52c41a;\n`\n\nconst ToDoHome = () => {\n    const { todoItems, openToDoItems, completeToDoItems } = useToDoList();\n    \n\n    return (\n        <Container>\n            <AddToDo />\n            <TodoContainer>\n                <Tabs defaultActiveKey=\"1\" size={\"large\"}>\n                    <TabPane tab={\n                        <Badge count={openToDoItems.length} overflowCount={99}><TabTitle>Open</TabTitle></Badge>\n                    } key=\"1\">\n                        <ToDoItems todoItems={openToDoItems} />\n\n                    </TabPane>\n                    <TabPane tab={<Badge count={completeToDoItems.length && <CompletedItemBadge>{completeToDoItems.length}</CompletedItemBadge>} overflowCount={99}>\n                        <TabTitle>Completed</TabTitle></Badge>} key=\"2\">\n                        <ToDoItems todoItems={completeToDoItems} />\n\n                    </TabPane>\n                    <TabPane tab={<Badge count={todoItems.length && <AllItemsBadge>{todoItems.length}</AllItemsBadge>} overflowCount={99}><TabTitle>All</TabTitle></Badge>} key=\"3\">\n                        <ToDoItems todoItems={todoItems} />\n                    </TabPane>\n                </Tabs>\n\n            </TodoContainer>\n        </Container>\n    );\n}\n\nexport default ToDoHome;\n","import { useEffect } from \"react\";\nimport { fetchTodoItems } from '../api/fetchToDoItems';\nimport { useToDoContext } from \"./useTodoContext\";\nimport {useCancellablePromise} from '../hooks/useCancellablePromise';\n\nexport const useToDoList = () => {\n    const { state, dispatch } = useToDoContext();\n    const { cancellablePromise } = useCancellablePromise();\n\n    useEffect(() => {\n            const fetchItems = async () => {\n                const items = await cancellablePromise(fetchTodoItems());\n                dispatch({\n                        type: 'TODO_ITEMS',\n                        todoItems: items\n                });\n                 \n            };\n    \n            fetchItems();\n        \n    }, []);\n    const { todoItems } = state;\n    const openToDoItems = todoItems.filter(t => !t.isComplete);\n    const completeToDoItems = todoItems.filter(t => t.isComplete);\n\n    return {\n        todoItems,\n        openToDoItems,\n        completeToDoItems\n    };\n}","\nexport const fetchTodoItems = () => {\n    //Asynchronous api call\n    return new Promise((resolve) => {\n        setTimeout(resolve([]), 200);\n    });\n}\n\n","import React, {useReducer} from 'react';\nimport './App.css';\nimport ToDoHome from './components/ToDoHome';\nimport { TodoProvider } from './providers/todoProvider';\nconst initialState = {\n  todoItems: []\n};\n\nconst markItemStateChange = (isComplete, id, state) => {\n  const item = state.todoItems.find(t => t.id === id);\n  if(item){\n    item.isComplete = isComplete;\n    return {\n      ...state, \n      todoItems: [...state.todoItems]\n    }\n  }\n  return state;\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return {\n        ...state,\n        todoItems: [...state.todoItems, {\n          ...action.item\n        }]\n      };\n    case 'COMPLETE_ITEM':\n      return markItemStateChange(true, action.id, state);\n    case 'UNDO_COMPLETE_ITEM':\n      return markItemStateChange(false, action.id, state);\n    case 'TODO_ITEMS':\n      return {\n        ...state,\n        todoItems: action.todoItems\n      }\n    default:\n      throw new Error('Unexpected action');\n  }\n};\n\n\nconst App = () => {\n\n  const state = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n    <TodoProvider value={state}> \n      <ToDoHome />\n    </TodoProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}